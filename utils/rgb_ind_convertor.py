# -*- coding: utf-8 -*-
"""rgb_ind_convertor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZdCuCHtiwesxNPSBAc9mfksxMX7cDaOZ
"""

from typing import Dict, List

import numpy as np

# use for index 2 rgb
floorplan_room_map = {
	0: [  203,  203,  203], # background
	1: [255, 255, 255], # Free
	# 1: [192,192,224], # closet
	# 2: [192,255,255], # bathroom/washroom
	# 3: [224,255,192], # livingroom/kitchen/diningroom
	# 4: [255,224,128], # bedroom
	# 5: [255,160, 96], # hall
	# 6: [255,224,224], # balcony
	2: [224,224,224], # not used
	3: [224,224,128]  # not used
}

# boundary label
floorplan_boundary_map = {
	0: [ 203, 203, 203], # background
	1: [255,60,128],  # opening (door&window)
	2: [0,0,0]  # wall line
}

# boundary label for presentation
floorplan_boundary_map_figure = {
	0: [255,255,255], # background
	1: [255, 60,128],  # opening (door&window)
	2: [  0,  0,  0]  # wall line
}

# merge all label into one multi-class label
floorplan_fuse_map = {
	0: [  0,  0,  0], # background
	1: [203, 203, 203], # Free
	# 1: [192,192,224], # closet
	# 2: [192,255,255], # batchroom/washroom
	# 3: [224,255,192], # livingroom/kitchen/dining room
	# 4: [255,224,128], # bedroom
	# 5: [255,160, 96], # hall
	# 6: [255,224,224], # balcony
	2: [224,224,224], # not used
	3: [224,224,128], # not used
	9: [255,60,128],  # extra label for opening (door&window)
	10: [255,255,255]  # extra label for wall line
}

# invert the color of wall line and background for presentation
floorplan_fuse_map_figure = {
	0: [255,255,255], # background
	1: [203, 203, 203], # Free
	# 1: [192,192,224], # closet
	# 2: [192,255,255], # batchroom/washroom
	# 3: [224,255,192], # livingroom/kitchen/dining room
	# 4: [255,224,128], # bedroom
	# 5: [255,160, 96], # hall
	# 6: [255,224,224], # balcony
	2: [224,224,224], # not used
	3: [224,224,128], # not used
	9: [255,60,128],  # extra label for opening (door&window)
	10: [ 0, 0,  0]  # extra label for wall line
}

def rgb2ind(
    im: np.ndarray, color_map: Dict[int, List[int]] = floorplan_room_map
) -> np.ndarray:
    ind = np.zeros((im.shape[0], im.shape[1]))

    for i, rgb in color_map.items():
        ind[(im == rgb).all(2)] = i

    # return ind.astype(int) # int => int64
    return ind.astype(np.uint8)  # force to uint8

def ind2rgb(
    ind_im: np.ndarray, color_map: Dict[int, List[int]] = floorplan_room_map
) -> np.ndarray:
    rgb_im = np.zeros((ind_im.shape[0], ind_im.shape[1], 3))

    for i, rgb in color_map.items():
        rgb_im[(ind_im == i)] = rgb
    return rgb_im.astype(int)

from datetime import datetime
import pytz

# UTC 시간대 설정
utc = pytz.utc

# 한국 시간대 설정
korea = pytz.timezone('Asia/Seoul')

# 현재 UTC 시간을 얻음
now_utc = utc.localize(datetime.now())

# 한국 시간으로 변환
now_korea = now_utc.astimezone(korea)

print("utils.ipynb >> Current Date and Time in Korea:", now_korea)

print("병신2")

